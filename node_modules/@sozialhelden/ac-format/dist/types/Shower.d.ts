import { Length } from './Units';
export interface Shower {
    step?: Length;
    /**
     * `true` if the shower is step-free and level with the space in front of it, `false` if not,
     * `undefined` if condition is unknown.
     */
    isLevel?: boolean;
    /**
     * `true` if the shower has support rails, `false` if not, `undefined` if condition is unknown.
     */
    hasSupportRails?: boolean;
    /**
     * At which height are the support rails? Measured from the top.
     */
    supportRailsHeight?: Length;
    /**
     * `true` if the support rails are above and below the controls, `false` if not, `undefined`
     * if condition is unknown.
     */
    supportRailsAreAboveAndBelowControls?: boolean;
    /**
     * `true` if the shower has a seat, `false` if not, `undefined` if condition is unknown..
     */
    hasShowerSeat?: boolean;
    /**
     * `true` if the shower seat can be removed from the shower easily, `false` if not, `undefined`
     * if condition is unknown.
     */
    showerSeatIsRemovable?: boolean;
    /**
     * `true` if the shower seat can be folded, `false` if not, `undefined` if condition is unknown.
     */
    showerSeatIsFolding?: boolean;
    /**
     * `true` if the shower has an ergonomic handle, `false` if not, `undefined` if condition is
     * unknown.
     */
    hasErgonomicHandle?: boolean;
}
export declare const ShowerSchema: import("./SimpleSchemaExtensions").ExtendedSchema;

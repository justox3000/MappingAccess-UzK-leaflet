import { Room } from './Room';
import { Mirror } from './Mirror';
import { WashBasin } from './WashBasin';
import { Entrance } from './Entrance';
import { Length } from './Units';
import { Toilet } from './Toilet';
import { Shower } from './Shower';
export declare type RestroomSignIcon = 'allGender' | 'female' | 'male' | 'personInWheelchair' | 'changingTable' | 'baby' | 'family' | 'urinal' | 'washBasin' | 'toiletBowl';
export interface Restroom extends Room {
    /**
     * Visible icons on the restroomâ€™s sign
     */
    signIcons?: Array<RestroomSignIcon>;
    /**
     * `true` if the restroom has a mirror, `false` if not, `undefined` if condition is unknown.
     */
    hasMirror?: boolean;
    /**
     * Describes a mirror, if existing.
     */
    mirror?: Mirror;
    /**
     * How wide is the space inside that is usable for turning?
     */
    turningSpaceInside?: Length;
    /**
     * `true` if there support rails on the walls
     */
    hasSupportRails?: boolean;
    /**
     * Object describing a toilet inside the restroom, if existing.
     */
    toilet?: Toilet;
    /**
     * `true` if there is a bath tub in this room, `false` if not, `undefined` if condition is
     * unknown.
     */
    hasBathTub?: boolean;
    /**
     * Object describing the entrance to this restroom.
     */
    entrance?: Entrance;
    /**
     * `true` if the restroom has a shower, `false` if not, `undefined` if condition is unknown.
     */
    hasShower?: boolean;
    /**
     * Object describing a shower inside this restroom, if existing.
     */
    shower?: Shower;
    /**
     * At which height from the floor is the soap?
     */
    heightOfSoap?: Length;
    /**
     * At which height from the floor is the drier or towel?
     */
    heightOfDrier?: Length;
    /**
     * Object describing a wash basin belonging to this restroom. It can be outside of the restroom.
     */
    washBasin?: WashBasin;
}
export declare const RestroomSchema: import("./SimpleSchemaExtensions").ExtendedSchema;
